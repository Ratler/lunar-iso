#!/bin/bash

umount $ISO_TARGET/proc &> /dev/null
umount $ISO_TARGET/dev &> /dev/null

. /etc/lunar/config
unset VERBOSE

# backup core tools
echo "+ backing up \"$ISO_LUNAR_MODULE-*-$ISO_BUILD.tar.bz2\""
cp $ISO_TARGET/var/cache/lunar/$ISO_LUNAR_MODULE-*-$ISO_BUILD.tar.bz2 aaa_base/$ISO_LUNAR_MODULE-$ISO_DATE-$ISO_BUILD.tar.bz2

echo "+ cleaning up (some) file structure items"
rm -f $ISO_TARGET/etc/rc*/*nfslock
rm -f $ISO_TARGET/etc/rc*/*nfs
rm -f $ISO_TARGET/etc/rc*/*xinetd
rm -f $ISO_TARGET/etc/rc*/*serial
rm -f $ISO_TARGET/etc/rc*/*portmap
rm -rf $ISO_TARGET/var/cache/ccache/*
rmdir /usr/lib/locale/*
chroot $ISO_TARGET ccache -C
chroot $ISO_TARGET ccache -M 256M
rm -rf $ISO_TARGET/etc/ssh/ssh_host_*key $ISO_TARGET/etc/ssh/ssh_host_*key.pub
rmdir /usr/lib/locale/*
sed -i 's/^MAKES=.*/MAKES=/' $ISO_TARGET/etc/lunar/local/optimizations
# this might go wrong so force it's removal before creating it as empty file:
rm -f $ISO_TARGET/etc/mtab
> $ISO_TARGET/etc/mtab

# store the list of stuff in /var/cache that needs to be resurrected:
echo "+ creating list of prepackaged modules"
mkdir -p $ISO_SOURCE/aaa_base
> $ISO_SOURCE/aaa_base/packages
for mod in $(cat conf/base.list conf/base.list-${ISO_KSUFFIX} conf/extended.list) kernel-headers-${ISO_KSUFFIX} ; do
  grep "^$mod:" $ISO_TARGET/var/state/lunar/packages >> $ISO_SOURCE/aaa_base/packages
done
# add core tools to the list:
echo "$ISO_LUNAR_MODULE:$ISO_DATE:installed:$ISO_DATE:" >> $ISO_SOURCE/aaa_base/packages

# delete .svn dirs from templates
find $ISO_TARGET -type d -name ".svn" -exec rm -rf {} \; &> /dev/null

echo "+ creating aaa_base.tar.bz2"
# gather present files
find $ISO_TARGET/{bin,boot,etc,home,lib,mnt,opt,root,sbin,srv,usr,var} | sort | uniq | sed "s:^$ISO_TARGET::g" | grep -v \
	-e "^/var/cache/lunar/" \
	-e "^/var/state/lunar/" \
	-e "^/var/build/" \
	-e "^/usr/share/doc" \
	-e "^/usr/src/" \
	-e "^/lib/modules/" \
	-e "^/usr/include/" \
	-e "^/usr/lib/perl" \
	-e "^/var/lib/lunar" \
	-e "^/etc/lunar" \
	-e "^/var/spool" \
	-e "^/var/log/" \
	-e "^/var/tmp" \
	-e "^/usr/share/" \
	-e "^/var/lock/" \
	-e "^/var/lib/" \
	-e "^/var/run/"  > $ISO_TARGET/.present
# add the kernel includes as well
find $ISO_TARGET/usr/include/{linux,asm} | sed "s:^$ISO_TARGET::g" >> $ISO_TARGET/.present
# add the install logs
cat $ISO_TARGET/var/log/lunar/install/* | sort | uniq > $ISO_TARGET/.tracked
diff -U0 $ISO_TARGET/.tracked $ISO_TARGET/.present | grep '^\+[^+]' | sed 's/^+//g' > $ISO_TARGET/.aaa_base.list
echo "/etc/lunar/local/optimizations.CCACHE" >> $ISO_TARGET/.aaa_base.list
echo "/etc/lunar/local/optimizations.GCC_3_4" >> $ISO_TARGET/.aaa_base.list
echo "/etc/lunar/local/optimizations.GNU_LD" >> $ISO_TARGET/.aaa_base.list
echo "/etc/lunar/local/optimizations.GNU_MAKE" >> $ISO_TARGET/.aaa_base.list
echo "/etc/lunar/local/optimizations.WRAPPERS" >> $ISO_TARGET/.aaa_base.list

# make the tarball
chroot $ISO_TARGET tar cjf /var/cache/lunar/aaa_base.tar.bz2 -T .aaa_base.list --no-recursion
mv $ISO_TARGET/var/cache/lunar/aaa_base.tar.bz2 $ISO_SOURCE/aaa_base/aaa_base.tar.bz2

# clean up
rm $ISO_TARGET/.present $ISO_TARGET/.tracked $ISO_TARGET/.aaa_base.list

