#!/bin/bash

echo "+ Starting rebuild of all modules"
. /etc/lunar/config

# do the parallel thingy?
if [ -n "$ISO_MAKES" ]; then
  sedit '/MAKES=/d' $ISO_TARGET/etc/lunar/local/optimizations
  echo "MAKES=$ISO_MAKES" >> $ISO_TARGET/etc/lunar/local/optimizations
fi

export VERBOSE=off
export BOOTLOADER=none
optimize

mkdir -p $ISO_TARGET/var/build

mount -t proc proc $ISO_TARGET/proc

echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
echo "+          STARTING CONFIGURING MODULES                +"
echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
echo ""

for mod in $(cat conf/base.list conf/base.list-${ISO_KSUFFIX} conf/extended.list) ; do
  yes '' | chroot $ISO_TARGET /sbin/lin --deps $mod
done

umount $ISO_TARGET/proc &> /dev/null
chroot $ISO_TARGET lin makedev
mount -t proc proc $ISO_TARGET/proc

chroot $ISO_TARGET /dev/install-devices.sh
chroot $ISO_TARGET rm -rf /var/build/makedev-*

echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
echo "+          STARTING KERNEL COMPILE                     +"
echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
echo ""

yes '' | chroot $ISO_TARGET lin linux-${ISO_KSUFFIX}
chroot $ISO_TARGET lin kernel-headers-${ISO_KSUFFIX}

echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
echo "+          STARTING COMPILE PHASE OF ALL MODULES       +"
echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
echo ""

# perl is notoriously problematic and needs to be built before glibc
chroot $ISO_TARGET lin perl

for mod in $(cat conf/base.list conf/base.list-${ISO_KSUFFIX} conf/extended.list) ; do
  chroot $ISO_TARGET /sbin/lin -c $mod
done

# openssh installs ssh keys so these are now tracked in the module :^(
chroot $ISO_TARGET /sbin/lin -c openssh
# e2fsprogs nabs /etc/mtab
chroot $ISO_TARGET /sbin/lin -c e2fsprogs

echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
echo "+          REBUILD FINISHED                            +"
echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++"

umount $ISO_TARGET/proc

touch $ISO_TARGET/.rebuild

